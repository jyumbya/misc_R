# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.data.frame(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
View(v2)
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.data.frame(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
View(v2)
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.data.frame(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
View(v2)
v2 <- as.data.frame(t(v2))
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
# rename the columns
colnames(v2) <- c("LAYER_NAME", "MIN", "MAX", "MEAN", "SUM")
row.names(v2) <- NULL
shpStats <- list()
cname <- aoi@data$NAME_3[p]
dname <- aoi@data$NAME_2[p]
pol <- aoi@polygons[p]
sh <- SpatialPolygons(pol)
proj4string(sh) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.data.frame(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
View(v2)
v2 <- as.data.frame(t(v2))
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
View(v2)
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.data.frame(area(sh)/1000000)
v2 <- as.data.frame(c(vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
View(v2)
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
View(v2)
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.data.frame(area(sh)/1000000)
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- area(sh)/1000000
area_polygon <- as.numeric(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
View(v2)
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
View(v2)
names(v2)
# rename the columns
colnames(v2) <- c("POLYGON_AREA", "LAYER_NAME", "MIN", "MAX", "MEAN", "SUM")
row.names(v2) <- NULL
View(v2)
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.numeric(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
View(v2)
# rename the columns
colnames(v2) <- c("LAYER_NAME", "POLYGON_AREA", "MIN", "MAX", "MEAN", "SUM")
View(v2)
row.names(v2) <- NULL
d <- cbind(ZONE = rep(dname, times = nrow(v2)),
WOREDA = rep(cname, times = nrow(v2)),
VARIABLE = rep(var, times = nrow(v2)), v2)  #add data
View(d)
shpStats <- lapply(1:nPol, function(p) {
cat("Extracting : ", var, "Polygon", p, "\n")
shpStats <- list()
cname <- aoi@data$NAME_3[p]
dname <- aoi@data$NAME_2[p]
pol <- aoi@polygons[p]
sh <- SpatialPolygons(pol)
proj4string(sh) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.numeric(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
# rename the columns
colnames(v2) <- c("LAYER_NAME", "POLYGON_AREA", "MIN", "MAX", "MEAN", "SUM")
row.names(v2) <- NULL
d <- cbind(ZONE = rep(dname, times = nrow(v2)),
WOREDA = rep(cname, times = nrow(v2)),
VARIABLE = rep(var, times = nrow(v2)), v2)  #add data
return(d)
})
shpStats <- do.call("rbind", shpStats)
View(shpStats)
install.packages("maptools")
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
require(raster)
require(maptools)
require(rgdal)
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
mask <- readOGR("E:/HS_West_Africa/shapes/mask.shp")
plot(mask)
require(raster)
require(maptools)
require(rgdal)
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
mask <- readOGR("E:/HS_West_Africa/shapes/mask.shp")
id <- c("none", "mild", "moderate", "severe")
mask <- readOGR(paste0(iDir, "/shapes/mask.shp"))
id <- c("none", "mild", "moderate", "severe")
thiLS <- c("none", "mild", "moderate", "severe")
thiStats <- list()
thi <- thiLS[1]
thi
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean))
d
View(d)
27000-14500
12500+5000
colnames(d) <- thi
View(d)
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean))
colnames(d) <- thi
return(d)
})
test <- do.call("rbind", thiStats)
test <- do.call("cbind", thiStats)
View(test)
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean))
colnames(d) <- thi
return(d)
})
thiStats <- do.call("cbind", thiStats)
View(thiStats)
write.csv(thiStats, file = paste0(iDir, "/historical_means.csv"), row.names = FALSE)
mod <- modLS[1]
modLS <- c("GFDL", "HADGEM2", "MPI")
periodLS <- c("2021_2050", "2071_2100")
mod <- modLS[1]
period <- periodLS[1]
period
iDir
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
hsFreq
d <- as.data.frame(cellStats(hsFreq, mean))
d
require(raster)
require(maptools)
require(rgdal)
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
mask <- readOGR(paste0(iDir, "/shapes/mask.shp"))
thiLS <- c("none", "mild", "moderate", "severe")
modLS <- c("GFDL", "HADGEM2", "MPI")
periodLS <- c("2021_2050", "2071_2100")
# historical
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- thi
return(d)
})
thiStats <- do.call("cbind", thiStats)
write.csv(thiStats, file = paste0(iDir, "/historical_means.csv"), row.names = FALSE)
write.csv(thiStats, file = paste0(iDir, "/historical_means.csv"), row.names = FALSE)
mod <- modLS[1]
period <- periodLS[1]
thi <- thiLS[1]
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- thi
View(d)
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
d <- cellStats(hsFreq, mean, na.rm=TRUE)
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- cellStats(hsFreq, mean, na.rm=TRUE)
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
thi
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
View(d)
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
View(d)
# historicalfuture
modStats <- lapply(modLS, function(mod){
periodStats <- lapply(periodLS, function(period){
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
return(d)
})
})
})
modStats <- do.call("cbind", modStats)
modStats <- do.call("rbind", modStats)
View(modStats)
# historicalfuture
modStats <- lapply(modLS, function(mod){
periodStats <- lapply(periodLS, function(period){
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
return(d)
})
})
})
modStats <- do.call("rbind", modStats)
View(modStats)
# historicalfuture
modStats <- lapply(modLS, function(mod){
periodStats <- lapply(periodLS, function(period){
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
return(d)
})
thiStats <- do.call("rbind", thiStats)
return(thiStats)
})
periodStats <- do.call(rbind, periodStats)
return(periodStats)
})
modStats <- do.call(rbind, modStats)
View(modStats)
# historicalfuture
modStats <- lapply(modLS, function(mod){
periodStats <- lapply(periodLS, function(period){
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
return(d)
})
thiStats <- do.call("rbind", thiStats)
return(thiStats)
})
periodStats <- do.call(rbind, periodStats)
return(periodStats)
})
modStats <- do.call(rbind, modStats)
write.csv(thiStats, file = paste0(iDir, "/future_means.csv"), row.names = FALSE)
# historicalfuture
modStats <- lapply(modLS, function(mod){
periodStats <- lapply(periodLS, function(period){
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
hsFreq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
return(d)
})
thiStats <- do.call("rbind", thiStats)
return(thiStats)
})
periodStats <- do.call(rbind, periodStats)
return(periodStats)
})
modStats <- do.call(rbind, modStats)
write.csv(modStats, file = paste0(iDir, "/future_means.csv"), row.names = FALSE)
plot(mask)
# historicalfuture
modStats <- lapply(modLS, function(mod){
periodStats <- lapply(periodLS, function(period){
thiStats <- lapply(thiLS, function(thi){
thiStats <- list()
freq <- raster(paste0(iDir, "/future/outputs/frequency/", mod, "/", period, "/p_", thi, "_avg.tif"))
freq <- mask(crop(freq, extent(mask)), mask)
d <- as.data.frame(cellStats(freq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)),
MODEL = rep(mod, times = nrow(d)),
PERIOD = rep(period, times = nrow(d)), d)  #add data
return(d)
})
thiStats <- do.call("rbind", thiStats)
return(thiStats)
})
periodStats <- do.call(rbind, periodStats)
return(periodStats)
})
modStats <- do.call(rbind, modStats)
write.csv(modStats, file = paste0(iDir, "/future_means.csv"), row.names = FALSE)
# calculate raster means
require(raster)
require(maptools)
require(rgdal)
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
mask <- readOGR(paste0(iDir, "/shapes/mask.shp"))
thiLS <- c("none", "mild", "moderate", "severe")
modLS <- c("GFDL", "HADGEM2", "MPI")
periodLS <- c("2021_2050", "2071_2100")
thi <- thiLS[1]
thi
freq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
freq <- mask(crop(freq, extent(mask)), mask)
plot(fre)
plot(freq)
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)), d)
View(d)
freq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
freq <- mask(crop(freq, extent(mask)), mask)
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)), d)
View(d)
require(raster)
require(maptools)
require(rgdal)
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
mask <- readOGR(paste0(iDir, "/shapes/mask.shp"))
thiLS <- c("none", "mild", "moderate", "severe")
modLS <- c("GFDL", "HADGEM2", "MPI")
periodLS <- c("2021_2050", "2071_2100")
# historical
thiStats <- lapply(thiLS, function(thi){
freq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
freq <- mask(crop(freq, extent(mask)), mask)
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)), d)
return(d)
})
thiStats <- do.call("rbind", thiStats)
View(thiStats)
# historical
thiStats <- lapply(thiLS, function(thi){
freq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
freq <- mask(crop(freq, extent(mask)), mask)
d <- as.data.frame(cellStats(hsFreq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)), d)
return(d)
})
# calculate raster means
require(raster)
require(maptools)
require(rgdal)
iDir <- "E:/HS_West_Africa"
wa_countries <- readOGR("E:/HS_West_Africa/shapes/WA_country_main.shp")
mask <- readOGR(paste0(iDir, "/shapes/mask.shp"))
thiLS <- c("none", "mild", "moderate", "severe")
modLS <- c("GFDL", "HADGEM2", "MPI")
periodLS <- c("2021_2050", "2071_2100")
# historical
thiStats <- lapply(thiLS, function(thi){
freq <- raster(paste0(iDir, "/historical/outputs/frequency/p_", thi, "_avg.tif"))
freq <- mask(crop(freq, extent(mask)), mask)
d <- as.data.frame(cellStats(freq, mean, na.rm=TRUE))
colnames(d) <- "MEAN_FREQUENCY"
d <- cbind(THI_CLASS = rep(thi, times = nrow(d)), d)
return(d)
})
thiStats <- do.call("rbind", thiStats)
View(thiStats)
write.csv(thiStats, file = paste0(iDir, "/historical_means.csv"), row.names = FALSE)
library(rgdal)
library(raster)
library(data.table)
library(dplyr)
iDir <- "D:/Junk/eth_clipped/wgs84"
varLS <- c("cattle_density", "goat_density", "sheep_density", "drySsnYear_1981_2019_mean",
"ETH_Chloris_gayana_csuit", "ETH_Chloris_gayana_fsuit", "ETH_Lablab_purpureus_csuit", "ETH_Lablab_purpureus_fsuit",
"lgp_eth", "tt2lgpless150days", "lgp")
varLS
library(rgdal)
library(raster)
library(data.table)
library(dplyr)
iDir <- "D:/Junk/eth_clipped/wgs84"
varLS <- c("cattle_density", "goat_density", "sheep_density", "drySsnYear_1981_2019_mean",
"ETH_Chloris_gayana_csuit", "ETH_Chloris_gayana_fsuit", "ETH_Lablab_purpureus_csuit", "ETH_Lablab_purpureus_fsuit",
"lgp", "tt2lgpless150days")
varLS
aoi <- readOGR(paste0("E:/Data/Country/Ethiopia/Administrative/ETH_adm3.shp"))
var <- varLS[9]
var
ras <- raster(paste0(iDir, "/", var, ".tif"))
ras <- raster(paste0(iDir, "/", var, ".tif"))
crs(ras) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
nPol <- length(aoi@polygons)
shpStats <- lapply(1:nPol, function(p) {
cat("Extracting : ", var, "Polygon", p, "\n")
shpStats <- list()
cname <- aoi@data$NAME_3[p]
dname <- aoi@data$NAME_2[p]
pol <- aoi@polygons[p]
sh <- SpatialPolygons(pol)
proj4string(sh) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
# calculate stats
vmin <- extract(ras, sh, fun = min, na.rm=TRUE)
vmax <- extract(ras, sh, fun = max, na.rm = TRUE)
vmean <- extract(ras, sh, fun = mean, na.rm = TRUE)
vsum <- extract(ras, sh, fun = sum, na.rm =TRUE)
area_polygon <- as.numeric(area(sh)/1000000)
v2 <- as.data.frame(c(area_polygon, vmin, vmax, vmean, vsum))  #convert to dataframe
v2 <- as.data.frame(t(v2))
ras_names <- as.data.frame(names(ras))
# combine layer names and data extract
v2 <- cbind(ras_names, v2)
# rename the columns
colnames(v2) <- c("LAYER_NAME", "POLYGON_AREA", "MIN", "MAX", "MEAN", "SUM")
row.names(v2) <- NULL
d <- cbind(ZONE = rep(dname, times = nrow(v2)),
WOREDA = rep(cname, times = nrow(v2)),
VARIABLE = rep(var, times = nrow(v2)), v2)  #add data
return(d)
})
test <- do.call("rbind", shpStats)
View(test)
write.csv(test, file = paste0(iDir, "/ethiopia_lgp_extract.csv"), row.names = FALSE)
library(rgdal)
library(raster)
library(data.table)
library(dplyr)
iDir <- "D:/OneDrive - CGIAR/Data/Adaptation_atlas"
varLS <- c("aridity", "chirps_cv", "dry_days_hist_yearly", "heat_stress_flips",
"hi", "max_cons_dry_days_hist", "ppt_driest_month", "ppt_driest_quarter",
"thi")
aoi <- readOGR(paste0(iDir, "/ifad_tz_aoi.shp"))
